// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// SOURCES: 
// https://www.prisma.io/docs/orm/prisma-schema/data-model/relations -- used to create foreign keys

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  // Blog      Blog[]
  comments Comment[]
}

model Blog {
  id          Int      @id @default(autoincrement())
  // userId      Int // The ID of the user that created this blog post
  // user        User     @relation(fields: [userId], references: [id])
  title       String
  description String
  tags        String?
  upvotes     Int      @default(0)
  downvotes   Int      @default(0)
  reports     Int      @default(0)
  comments Comment[]
}

// SOURCE: https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/self-relations#relational-databases -- how to define self relations
model Comment {
  id        Int  @id @default(autoincrement())
  // userId      Int // The ID of the user that created this blog post
  // user        User     @relation(fields: [userId], references: [id])
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  blogId    Int
  blog      Blog       @relation(fields: [blogId], references: [id])
  upvotes   Int        @default(0)
  downvotes Int        @default(0)
  reports   Int        @default(0)
  createdAt DateTime   @default(now())
  replies   Comment[]  @relation("CommentReplies")
  Comment Comment[]    @relation("CommentReplies")
}
